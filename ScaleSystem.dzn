import SerialProtocolSystem.dzn;
import Timer.dzn;
import Display.dzn;
import ScaleSystemProperties.dzn;
import Scale.dzn;

component ScaleSystem
{
  provides IScale pIScaleSystem;
  requires IScaleSystemProperties rIScaleSystemProperties;  
  requires IHardwareBinaryInput rIHardwareBinaryInput;
  requires IHardwareBinaryOutput rIHardwareBinaryOutput;  
  requires IRegister rIRegister;  
  requires ITimer rITimer;
  requires IDisplay rIDisplay;

  system
  {
    Scale cScale;
    SerialProtocolSystem cSerialProtocolSystem;
    cScale.pIScaleSystem <=> pIScaleSystem;
    cScale.rISerialProtocol <=>  cSerialProtocolSystem.pISerialProtocolSystem;
    cScale.rITimer <=> rITimer;
    cScale.rIDisplay <=> rIDisplay;
    cScale.rIScaleSystemProperties <=> rIScaleSystemProperties;
    rIHardwareBinaryInput <=> cSerialProtocolSystem.rIInput;
    rIHardwareBinaryOutput <=> cSerialProtocolSystem.rIOutput;    
    rIRegister <=> cSerialProtocolSystem.rIRegister;    
  }
}